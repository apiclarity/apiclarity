// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/apiclarity/apiclarity/backend/pkg/database (interfaces: Database)

// Package database is a generated GoMock package.
package database

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDatabase is a mock of Database interface
type MockDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseMockRecorder
}

// MockDatabaseMockRecorder is the mock recorder for MockDatabase
type MockDatabaseMockRecorder struct {
	mock *MockDatabase
}

// NewMockDatabase creates a new mock instance
func NewMockDatabase(ctrl *gomock.Controller) *MockDatabase {
	mock := &MockDatabase{ctrl: ctrl}
	mock.recorder = &MockDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDatabase) EXPECT() *MockDatabaseMockRecorder {
	return m.recorder
}

// APIEventsTable mocks base method
func (m *MockDatabase) APIEventsTable() APIEventsTable {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "APIEventsTable")
	ret0, _ := ret[0].(APIEventsTable)
	return ret0
}

// APIEventsTable indicates an expected call of APIEventsTable
func (mr *MockDatabaseMockRecorder) APIEventsTable() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "APIEventsTable", reflect.TypeOf((*MockDatabase)(nil).APIEventsTable))
}

// APIInventoryTable mocks base method
func (m *MockDatabase) APIInventoryTable() APIInventoryTable {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "APIInventoryTable")
	ret0, _ := ret[0].(APIInventoryTable)
	return ret0
}

// APIInventoryTable indicates an expected call of APIInventoryTable
func (mr *MockDatabaseMockRecorder) APIInventoryTable() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "APIInventoryTable", reflect.TypeOf((*MockDatabase)(nil).APIInventoryTable))
}

// ReviewTable mocks base method
func (m *MockDatabase) ReviewTable() ReviewTable {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReviewTable")
	ret0, _ := ret[0].(ReviewTable)
	return ret0
}

// ReviewTable indicates an expected call of ReviewTable
func (mr *MockDatabaseMockRecorder) ReviewTable() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReviewTable", reflect.TypeOf((*MockDatabase)(nil).ReviewTable))
}
