// Copyright Â© 2021 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package rest

import (
	"reflect"
	"testing"

	"github.com/go-openapi/loads"
	"gotest.tools/v3/assert"
)

var (
	userSpec         = "swagger: '2.0'\ninfo:\n  version: ''\n  title: User\n  description: Provide Customer login, register, retrieval, as well as card and address retrieval\n  license:\n    name: MIT\n    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT\nhost: user\nbasePath: /\nsecurityDefinitions:\n  basicAuth:\n    type: basic\n    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`\nschemes:\n  - http\nconsumes:\n  - application/json;charset=UTF-8\nproduces:\n  - application/hal+json\npaths:\n  /login:\n    get:\n      description: Return logged in user\n      operationId: Get Login\n      produces:\n        - application/json;charset=UTF-8\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Getcustomersresponse'\n  /register:\n    post:\n      description: Register new user\n      operationId: Set User\n      produces:\n        - application/json;charset=UTF-8\n      parameters:\n        - name: register\n          in: body\n          description: register object\n          required: true\n          schema:\n            $ref: '#/definitions/Register'\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Statusresponse'\n  /customers:\n    get:\n      description: Returns all customers\n      operationId: Get customers\n      produces:\n        - application/json;charset=UTF-8\n      parameters: []\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Getcustomersresponse'\n  /customers/{id}:\n    get:\n      description: Returns a customer\n      operationId: Get customer\n      produces:\n        - application/json;charset=UTF-8\n      parameters:\n        - name: id\n          in: path\n          description: ID of customer to fetch\n          required: true\n          type: string\n          default: 57a98d98e4b00679b4a830af\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Customer'\n    delete:\n      description: Delete customer\n      operationId: Delete customer\n      produces:\n        - application/json;charset=UTF-8\n      parameters:\n        - name: id\n          in: path\n          description: ID of customer to delete\n          required: true\n          type: string\n          default: 57a98d98e4b00679b4a830b5\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Deleteresponse'\n  /customers/{id}/cards:\n    get:\n      description: Returns a customer\n      operationId: Get customer cards\n      produces:\n        - application/json;charset=UTF-8\n      parameters:\n        - name: id\n          in: path\n          description: ID of customer to fetch\n          required: true\n          type: string\n          default: 57a98d98e4b00679b4a830af\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Getcardsresponse'\n  /customers/{id}/addresses:\n    get:\n      description: Returns an address\n      operationId: Get customer addresses\n      produces:\n        - application/json;charset=UTF-8\n      parameters:\n        - name: id\n          in: path\n          description: ID of customer to fetch\n          required: true\n          type: string\n          default: 57a98d98e4b00679b4a830af\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Listaddressresponse'\n  /cards:\n    get:\n      description: Return all cards\n      operationId: Get cards\n      produces:\n        - application/json;charset=UTF-8\n      parameters: []\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Getcardsresponse'\n    post:\n      description: Create new card\n      operationId: Set Card\n      produces:\n        - application/json;charset=UTF-8\n      parameters:\n        - name: card\n          in: body\n          description: Credit card\n          required: true\n          schema:\n            $ref: '#/definitions/Postcard'\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Statusresponse'\n  /cards/{id}:\n    get:\n      description: Returns a card\n      operationId: Get card\n      produces:\n        - application/json;charset=UTF-8\n      parameters:\n        - name: id\n          in: path\n          description: ID of card to fetch\n          required: true\n          type: string\n          default: 57a98d98e4b00679b4a830ae\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Card'\n    delete:\n      description: Delete card\n      operationId: Delete card\n      produces:\n        - application/json;charset=UTF-8\n      parameters:\n        - name: id\n          in: path\n          description: ID of card to delete\n          required: true\n          type: string\n          default: 57a98d98e4b00679b4a830ae\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Deleteresponse'\n  /addresses:\n    get:\n      description: Returns all addresses\n      operationId: Get addresses\n      produces:\n        - application/json;charset=UTF-8\n      parameters: []\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Listaddressresponse'\n    post:\n      description: Create new address\n      operationId: Set Address\n      produces:\n        - application/json;charset=UTF-8\n      parameters:\n        - name: address\n          in: body\n          description: Address\n          required: true\n          schema:\n            $ref: '#/definitions/Postaddress'\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Statusresponse'\n  /addresses/{id}:\n    get:\n      description: Returns an address\n      operationId: Get address\n      produces:\n        - application\n      parameters:\n        - name: id\n          in: path\n          description: ID of address to fetch\n          required: true\n          type: string\n          default: 57a98d98e4b00679b4a830ad\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Address'\n    delete:\n      description: Delete address\n      operationId: Delete address\n      produces:\n        - application/json;charset=UTF-8\n      parameters:\n        - name: id\n          in: path\n          description: ID of address to delete\n          required: true\n          type: string\n          default: 57a98d98e4b00679b4a830ad\n      responses:\n        '200':\n          description: ''\n          schema:\n            $ref: '#/definitions/Deleteresponse'\ndefinitions:\n  Getcustomersresponse:\n    title: Get customers response\n    type: object\n    properties:\n      _embedded:\n        type: object\n        properties:\n          customer:\n            type: array\n            items:\n              $ref: '#/definitions/Customer'\n      _links:\n        type: object\n      page:\n        type: object\n    required:\n      - _embedded\n  Getcardsresponse:\n    title: Get cards response\n    type: object\n    properties:\n      _embedded:\n        type: object\n        properties:\n          card:\n            type: array\n            items:\n              $ref: '#/definitions/Card'\n      _links:\n        type: object\n      page:\n        type: object\n    required:\n      - _embedded\n  Statusresponse:\n    title: Post status response\n    type: object\n    properties:\n      id:\n        type: string\n    required:\n      - id\n  Deleteresponse:\n    title: Delete status response\n    type: object\n    properties:\n      status:\n        type: boolean\n    required:\n      - status\n  Customer:\n    type: object\n    properties:\n      firstName:\n        type: string\n      lastName:\n        type: string\n      username:\n        type: string\n      _links:\n        type: object\n        properties:\n          self:\n            type: object\n            properties:\n              href:\n                type: string\n            required:\n              - href\n          customer:\n            type: object\n            properties:\n              href:\n                type: string\n            required:\n              - href\n          addresses:\n            type: object\n            properties:\n              href:\n                type: string\n            required:\n              - href\n          cards:\n            type: object\n            properties:\n              href:\n                type: string\n            required:\n              - href\n        required:\n          - self\n          - customer\n    required:\n      - firstName\n      - lastName\n      - username\n      - _links\n  Card:\n    type: object\n    properties:\n      longNum:\n        type: string\n      expires:\n        type: string\n      ccv:\n        type: string\n      _links:\n        type: object\n        properties:\n          self:\n            type: object\n            properties:\n              href:\n                type: string\n            required:\n              - href\n          card:\n            type: object\n            properties:\n              href:\n                type: string\n            required:\n              - href\n        required:\n          - self\n          - card\n    required:\n      - longNum\n      - expires\n      - ccv\n      - _links\n  Address:\n    type: object\n    properties:\n      number:\n        type: string\n      street:\n        type: string\n      city:\n        type: string\n      postcode:\n        type: string\n      country:\n        type: string\n      _links:\n        type: object\n        properties:\n          self:\n            type: object\n            properties:\n              href:\n                type: string\n            required:\n              - href\n          address:\n            type: object\n            properties:\n              href:\n                type: string\n            required:\n              - href\n        required:\n          - self\n          - address\n    required:\n      - number\n      - street\n      - city\n      - postcode\n      - country\n      - _links\n  Listaddressresponse:\n    title: List response\n    type: object\n    properties:\n      _embedded:\n        type: object\n        properties:\n          address:\n            type: array\n            items:\n              $ref: '#/definitions/Address'\n      _links:\n        type: object\n      page:\n        type: object\n    required:\n      - _embedded\n  Register:\n    title: Register\n    type: object\n    properties:\n      username:\n        description: Username\n        type: string\n      password:\n        description: Password\n        type: string\n      email:\n        description: Email\n        type: string\n    required:\n      - username\n      - password\n  Postcard:\n    title: Post Card\n    type: object\n    properties:\n      longNum:\n        description: Credit card number\n        type: string\n      expires:\n        description: Card expiration\n        type: string\n      ccv:\n        description: Card ccv\n        type: string\n      userID:\n        description: User to attach this card to.\n        type: string\n  Postaddress:\n    title: Post Address\n    type: object\n    properties:\n      street:\n        type: string\n      number:\n        type: string\n      country:\n        type: string\n      city:\n        type: string\n      postcode:\n        type: string\n      userID:\n        description: User to attach this card to.\n        type: string\n"
	userExpandedSpec = "consumes:\n  - application/json;charset=UTF-8\nproduces:\n  - application/hal+json\nschemes:\n  - http\nswagger: '2.0'\ninfo:\n  version: ''\n  description: Provide Customer login, register, retrieval, as well as card and address retrieval\n  title: User\n  license:\n    name: MIT\n    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT\nhost: user\nbasePath: /\npaths:\n  /addresses:\n    get:\n      description: Returns all addresses\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Get addresses\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            title: List response\n            required:\n              - _embedded\n            properties:\n              _embedded:\n                type: object\n                properties:\n                  address:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                        - number\n                        - street\n                        - city\n                        - postcode\n                        - country\n                        - _links\n                      properties:\n                        _links:\n                          type: object\n                          required:\n                            - self\n                            - address\n                          properties:\n                            address:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                            self:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                        city:\n                          type: string\n                        country:\n                          type: string\n                        number:\n                          type: string\n                        postcode:\n                          type: string\n                        street:\n                          type: string\n              _links:\n                type: object\n              page:\n                type: object\n    post:\n      description: Create new address\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Set Address\n      parameters:\n        - description: Address\n          name: address\n          in: body\n          required: true\n          schema:\n            type: object\n            title: Post Address\n            properties:\n              city:\n                type: string\n              country:\n                type: string\n              number:\n                type: string\n              postcode:\n                type: string\n              street:\n                type: string\n              userID:\n                description: User to attach this card to.\n                type: string\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            title: Post status response\n            required:\n              - id\n            properties:\n              id:\n                type: string\n  /addresses/{id}:\n    get:\n      description: Returns an address\n      produces:\n        - application\n      operationId: Get address\n      parameters:\n        - type: string\n          default: 57a98d98e4b00679b4a830ad\n          description: ID of address to fetch\n          name: id\n          in: path\n          required: true\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            required:\n              - number\n              - street\n              - city\n              - postcode\n              - country\n              - _links\n            properties:\n              _links:\n                type: object\n                required:\n                  - self\n                  - address\n                properties:\n                  address:\n                    type: object\n                    required:\n                      - href\n                    properties:\n                      href:\n                        type: string\n                  self:\n                    type: object\n                    required:\n                      - href\n                    properties:\n                      href:\n                        type: string\n              city:\n                type: string\n              country:\n                type: string\n              number:\n                type: string\n              postcode:\n                type: string\n              street:\n                type: string\n    delete:\n      description: Delete address\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Delete address\n      parameters:\n        - type: string\n          default: 57a98d98e4b00679b4a830ad\n          description: ID of address to delete\n          name: id\n          in: path\n          required: true\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            title: Delete status response\n            required:\n              - status\n            properties:\n              status:\n                type: boolean\n  /cards:\n    get:\n      description: Return all cards\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Get cards\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            title: Get cards response\n            required:\n              - _embedded\n            properties:\n              _embedded:\n                type: object\n                properties:\n                  card:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                        - longNum\n                        - expires\n                        - ccv\n                        - _links\n                      properties:\n                        _links:\n                          type: object\n                          required:\n                            - self\n                            - card\n                          properties:\n                            card:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                            self:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                        ccv:\n                          type: string\n                        expires:\n                          type: string\n                        longNum:\n                          type: string\n              _links:\n                type: object\n              page:\n                type: object\n    post:\n      description: Create new card\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Set Card\n      parameters:\n        - description: Credit card\n          name: card\n          in: body\n          required: true\n          schema:\n            type: object\n            title: Post Card\n            properties:\n              ccv:\n                description: Card ccv\n                type: string\n              expires:\n                description: Card expiration\n                type: string\n              longNum:\n                description: Credit card number\n                type: string\n              userID:\n                description: User to attach this card to.\n                type: string\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            title: Post status response\n            required:\n              - id\n            properties:\n              id:\n                type: string\n  /cards/{id}:\n    get:\n      description: Returns a card\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Get card\n      parameters:\n        - type: string\n          default: 57a98d98e4b00679b4a830ae\n          description: ID of card to fetch\n          name: id\n          in: path\n          required: true\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            required:\n              - longNum\n              - expires\n              - ccv\n              - _links\n            properties:\n              _links:\n                type: object\n                required:\n                  - self\n                  - card\n                properties:\n                  card:\n                    type: object\n                    required:\n                      - href\n                    properties:\n                      href:\n                        type: string\n                  self:\n                    type: object\n                    required:\n                      - href\n                    properties:\n                      href:\n                        type: string\n              ccv:\n                type: string\n              expires:\n                type: string\n              longNum:\n                type: string\n    delete:\n      description: Delete card\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Delete card\n      parameters:\n        - type: string\n          default: 57a98d98e4b00679b4a830ae\n          description: ID of card to delete\n          name: id\n          in: path\n          required: true\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            title: Delete status response\n            required:\n              - status\n            properties:\n              status:\n                type: boolean\n  /customers:\n    get:\n      description: Returns all customers\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Get customers\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            title: Get customers response\n            required:\n              - _embedded\n            properties:\n              _embedded:\n                type: object\n                properties:\n                  customer:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                        - firstName\n                        - lastName\n                        - username\n                        - _links\n                      properties:\n                        _links:\n                          type: object\n                          required:\n                            - self\n                            - customer\n                          properties:\n                            addresses:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                            cards:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                            customer:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                            self:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                        firstName:\n                          type: string\n                        lastName:\n                          type: string\n                        username:\n                          type: string\n              _links:\n                type: object\n              page:\n                type: object\n  /customers/{id}:\n    get:\n      description: Returns a customer\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Get customer\n      parameters:\n        - type: string\n          default: 57a98d98e4b00679b4a830af\n          description: ID of customer to fetch\n          name: id\n          in: path\n          required: true\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            required:\n              - firstName\n              - lastName\n              - username\n              - _links\n            properties:\n              _links:\n                type: object\n                required:\n                  - self\n                  - customer\n                properties:\n                  addresses:\n                    type: object\n                    required:\n                      - href\n                    properties:\n                      href:\n                        type: string\n                  cards:\n                    type: object\n                    required:\n                      - href\n                    properties:\n                      href:\n                        type: string\n                  customer:\n                    type: object\n                    required:\n                      - href\n                    properties:\n                      href:\n                        type: string\n                  self:\n                    type: object\n                    required:\n                      - href\n                    properties:\n                      href:\n                        type: string\n              firstName:\n                type: string\n              lastName:\n                type: string\n              username:\n                type: string\n    delete:\n      description: Delete customer\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Delete customer\n      parameters:\n        - type: string\n          default: 57a98d98e4b00679b4a830b5\n          description: ID of customer to delete\n          name: id\n          in: path\n          required: true\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            title: Delete status response\n            required:\n              - status\n            properties:\n              status:\n                type: boolean\n  /customers/{id}/addresses:\n    get:\n      description: Returns an address\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Get customer addresses\n      parameters:\n        - type: string\n          default: 57a98d98e4b00679b4a830af\n          description: ID of customer to fetch\n          name: id\n          in: path\n          required: true\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            title: List response\n            required:\n              - _embedded\n            properties:\n              _embedded:\n                type: object\n                properties:\n                  address:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                        - number\n                        - street\n                        - city\n                        - postcode\n                        - country\n                        - _links\n                      properties:\n                        _links:\n                          type: object\n                          required:\n                            - self\n                            - address\n                          properties:\n                            address:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                            self:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                        city:\n                          type: string\n                        country:\n                          type: string\n                        number:\n                          type: string\n                        postcode:\n                          type: string\n                        street:\n                          type: string\n              _links:\n                type: object\n              page:\n                type: object\n  /customers/{id}/cards:\n    get:\n      description: Returns a customer\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Get customer cards\n      parameters:\n        - type: string\n          default: 57a98d98e4b00679b4a830af\n          description: ID of customer to fetch\n          name: id\n          in: path\n          required: true\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            title: Get cards response\n            required:\n              - _embedded\n            properties:\n              _embedded:\n                type: object\n                properties:\n                  card:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                        - longNum\n                        - expires\n                        - ccv\n                        - _links\n                      properties:\n                        _links:\n                          type: object\n                          required:\n                            - self\n                            - card\n                          properties:\n                            card:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                            self:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                        ccv:\n                          type: string\n                        expires:\n                          type: string\n                        longNum:\n                          type: string\n              _links:\n                type: object\n              page:\n                type: object\n  /login:\n    get:\n      description: Return logged in user\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Get Login\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            title: Get customers response\n            required:\n              - _embedded\n            properties:\n              _embedded:\n                type: object\n                properties:\n                  customer:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                        - firstName\n                        - lastName\n                        - username\n                        - _links\n                      properties:\n                        _links:\n                          type: object\n                          required:\n                            - self\n                            - customer\n                          properties:\n                            addresses:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                            cards:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                            customer:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                            self:\n                              type: object\n                              required:\n                                - href\n                              properties:\n                                href:\n                                  type: string\n                        firstName:\n                          type: string\n                        lastName:\n                          type: string\n                        username:\n                          type: string\n              _links:\n                type: object\n              page:\n                type: object\n  /register:\n    post:\n      description: Register new user\n      produces:\n        - application/json;charset=UTF-8\n      operationId: Set User\n      parameters:\n        - description: register object\n          name: register\n          in: body\n          required: true\n          schema:\n            type: object\n            title: Register\n            required:\n              - username\n              - password\n            properties:\n              email:\n                description: Email\n                type: string\n              password:\n                description: Password\n                type: string\n              username:\n                description: Username\n                type: string\n      responses:\n        '200':\n          description: ''\n          schema:\n            type: object\n            title: Post status response\n            required:\n              - id\n            properties:\n              id:\n                type: string\ndefinitions:\n  Address:\n    type: object\n    required:\n      - number\n      - street\n      - city\n      - postcode\n      - country\n      - _links\n    properties:\n      _links:\n        type: object\n        required:\n          - self\n          - address\n        properties:\n          address:\n            type: object\n            required:\n              - href\n            properties:\n              href:\n                type: string\n          self:\n            type: object\n            required:\n              - href\n            properties:\n              href:\n                type: string\n      city:\n        type: string\n      country:\n        type: string\n      number:\n        type: string\n      postcode:\n        type: string\n      street:\n        type: string\n  Card:\n    type: object\n    required:\n      - longNum\n      - expires\n      - ccv\n      - _links\n    properties:\n      _links:\n        type: object\n        required:\n          - self\n          - card\n        properties:\n          card:\n            type: object\n            required:\n              - href\n            properties:\n              href:\n                type: string\n          self:\n            type: object\n            required:\n              - href\n            properties:\n              href:\n                type: string\n      ccv:\n        type: string\n      expires:\n        type: string\n      longNum:\n        type: string\n  Customer:\n    type: object\n    required:\n      - firstName\n      - lastName\n      - username\n      - _links\n    properties:\n      _links:\n        type: object\n        required:\n          - self\n          - customer\n        properties:\n          addresses:\n            type: object\n            required:\n              - href\n            properties:\n              href:\n                type: string\n          cards:\n            type: object\n            required:\n              - href\n            properties:\n              href:\n                type: string\n          customer:\n            type: object\n            required:\n              - href\n            properties:\n              href:\n                type: string\n          self:\n            type: object\n            required:\n              - href\n            properties:\n              href:\n                type: string\n      firstName:\n        type: string\n      lastName:\n        type: string\n      username:\n        type: string\n  Deleteresponse:\n    type: object\n    title: Delete status response\n    required:\n      - status\n    properties:\n      status:\n        type: boolean\n  Getcardsresponse:\n    type: object\n    title: Get cards response\n    required:\n      - _embedded\n    properties:\n      _embedded:\n        type: object\n        properties:\n          card:\n            type: array\n            items:\n              type: object\n              required:\n                - longNum\n                - expires\n                - ccv\n                - _links\n              properties:\n                _links:\n                  type: object\n                  required:\n                    - self\n                    - card\n                  properties:\n                    card:\n                      type: object\n                      required:\n                        - href\n                      properties:\n                        href:\n                          type: string\n                    self:\n                      type: object\n                      required:\n                        - href\n                      properties:\n                        href:\n                          type: string\n                ccv:\n                  type: string\n                expires:\n                  type: string\n                longNum:\n                  type: string\n      _links:\n        type: object\n      page:\n        type: object\n  Getcustomersresponse:\n    type: object\n    title: Get customers response\n    required:\n      - _embedded\n    properties:\n      _embedded:\n        type: object\n        properties:\n          customer:\n            type: array\n            items:\n              type: object\n              required:\n                - firstName\n                - lastName\n                - username\n                - _links\n              properties:\n                _links:\n                  type: object\n                  required:\n                    - self\n                    - customer\n                  properties:\n                    addresses:\n                      type: object\n                      required:\n                        - href\n                      properties:\n                        href:\n                          type: string\n                    cards:\n                      type: object\n                      required:\n                        - href\n                      properties:\n                        href:\n                          type: string\n                    customer:\n                      type: object\n                      required:\n                        - href\n                      properties:\n                        href:\n                          type: string\n                    self:\n                      type: object\n                      required:\n                        - href\n                      properties:\n                        href:\n                          type: string\n                firstName:\n                  type: string\n                lastName:\n                  type: string\n                username:\n                  type: string\n      _links:\n        type: object\n      page:\n        type: object\n  Listaddressresponse:\n    type: object\n    title: List response\n    required:\n      - _embedded\n    properties:\n      _embedded:\n        type: object\n        properties:\n          address:\n            type: array\n            items:\n              type: object\n              required:\n                - number\n                - street\n                - city\n                - postcode\n                - country\n                - _links\n              properties:\n                _links:\n                  type: object\n                  required:\n                    - self\n                    - address\n                  properties:\n                    address:\n                      type: object\n                      required:\n                        - href\n                      properties:\n                        href:\n                          type: string\n                    self:\n                      type: object\n                      required:\n                        - href\n                      properties:\n                        href:\n                          type: string\n                city:\n                  type: string\n                country:\n                  type: string\n                number:\n                  type: string\n                postcode:\n                  type: string\n                street:\n                  type: string\n      _links:\n        type: object\n      page:\n        type: object\n  Postaddress:\n    type: object\n    title: Post Address\n    properties:\n      city:\n        type: string\n      country:\n        type: string\n      number:\n        type: string\n      postcode:\n        type: string\n      street:\n        type: string\n      userID:\n        description: User to attach this card to.\n        type: string\n  Postcard:\n    type: object\n    title: Post Card\n    properties:\n      ccv:\n        description: Card ccv\n        type: string\n      expires:\n        description: Card expiration\n        type: string\n      longNum:\n        description: Credit card number\n        type: string\n      userID:\n        description: User to attach this card to.\n        type: string\n  Register:\n    type: object\n    title: Register\n    required:\n      - username\n      - password\n    properties:\n      email:\n        description: Email\n        type: string\n      password:\n        description: Password\n        type: string\n      username:\n        description: Username\n        type: string\n  Statusresponse:\n    type: object\n    title: Post status response\n    required:\n      - id\n    properties:\n      id:\n        type: string\nsecurityDefinitions:\n  basicAuth:\n    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`\n    type: basic\n"
)

func Test_getExpandedSpec(t *testing.T) {
	analyzedUserSpec, err := loads.Analyzed([]byte(userSpec), "")
	assert.NilError(t, err)
	analyzedUserExpandedSpec, err := loads.Analyzed([]byte(userExpandedSpec), "")
	assert.NilError(t, err)
	type args struct {
		analyzed *loads.Document
	}
	tests := []struct {
		name    string
		args    args
		want    []byte
		wantErr bool
	}{
		{
			name: "sanity",
			args: args{
				analyzed: analyzedUserSpec,
			},
			want:    []byte(marshal(analyzedUserExpandedSpec.Spec())),
			wantErr: false,
		},
		{
			name: "already expanded - no change to spec",
			args: args{
				analyzed: analyzedUserExpandedSpec,
			},
			want:    []byte(marshal(analyzedUserExpandedSpec.Spec())),
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got, err := getExpandedSpec(tt.args.analyzed)
			if (err != nil) != tt.wantErr {
				t.Errorf("getExpandedSpec() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("getExpandedSpec() got = %v, want %v", string(got), string(tt.want))
			}
		})
	}
}
