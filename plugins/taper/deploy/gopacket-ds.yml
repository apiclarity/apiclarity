apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
  name: apiclarity-taper
  namespace: apiclarity
spec:
  selector:
    matchLabels:
      app: apiclarity-taper
  template:
    metadata:
      labels:
        app: apiclarity-taper
    spec:
      serviceAccountName: apiclarity-taper
      containers:
      - command:
        - ./agent
        - -i
        - any
        env:
        - name: GOGC
          value: "12800"
        - name: UPSTREAM_TELEMETRY_HOST_NAME
          value: {{UPSTREAM_TELEMETRY_HOST_NAME}}
        - name: NAMESPACES_TO_TAP
          value: {{NAMESPACES_TO_TAP}}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: ghcr.io/apiclarity/passive-taper:latest
        imagePullPolicy: Always
        name: apiclarity-taper
        resources:
          limits:
            cpu: 750m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          privileged: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: apiclarity-taper-cluster-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apiclarity-taper-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: apiclarity-taper-cluster-role
subjects:
  - kind: ServiceAccount
    name: apiclarity-taper
    namespace: apiclarity
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: apiclarity-taper
  namespace: apiclarity
---
