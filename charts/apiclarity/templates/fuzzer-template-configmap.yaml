apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "apiclarity.name" . }}-fuzzer-template
  namespace: '{{ .Release.Namespace }}'
  labels:
    {{ include "apiclarity.labels" . }}
data:
  config: |-
    apiVersion: batch/v1
    kind: Job
    metadata:
      namespace: '{{ .Release.Namespace }}'
      labels:
{{- toYaml (index .Values "apiclarity" "labels") | nindent 8 }}
    spec:
      backoffLimit: 0
      ttlsecondsafterfinished: 300
      template:
        metadata:
          labels:
{{- toYaml (index .Values "apiclarity" "labels") | nindent 12 }}
        spec:
          restartpolicy: Never
          volumes:
          - name: tmp-volume
            emptyDir: {}
          securityContext:
            capabilities:
              drop:
              - all
            runAsNonRoot: true
            runAsGroup: 1001
            runAsUser: 1001
            privileged: false
            allowPrivilegeEscalation: false
          containers:
          - name: vulnerability-scanner
            image: '{{ index .Values "apiclarity" "modules" "fuzzer" "docker" "image" }}'
            imagePullPolicy: Always
            volumemounts:
              - mountpath: /tmp
                name: tmp-volume
            env:
            - name: PLATFORM_TYPE
              value: "API_CLARITY"
            - name: PLATFORM_HOST
              value: "http://apiclarity-apiclarity:8080/api"
            - name: FUZZER
              value: "scn-fuzzer,restler,crud"
            - name: REQUEST_SCOPE
              value: "global/internalservices/portshift_request"
            - name: RESTLER_ROOT_PATH
              value: "/tmp"
            - name: RESTLER_TOKEN_INJECTOR_PATH
              value: "/app/"
            - name: DEBUG
              value: true
            resources:
