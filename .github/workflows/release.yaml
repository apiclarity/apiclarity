name: Release

on:
  workflow_dispatch:
    inputs:
      pre_version:
        description: Previous Version
        required: true
      version:
        description: Release Version
        required: true

env:
  GO_VERSION: 1.16

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Check licenses
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make license-check

      - name: Run verification
        run: make check

      - name: Previous tag validation
        run: |
          tag='${{ github.event.inputs.pre_version }}'
          [[ $tag =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]] || exit 1

      - name: Tag validation
        run: |
          tag='${{ github.event.inputs.version }}'
          [[ $tag =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]] || exit 1

      - name: Tag
        run: |
          tag='${{ github.event.inputs.version }}'

          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

          sed -i 's/image: ghcr.io\/apiclarity\/apiclarity:latest/image: ghcr.io\/apiclarity\/apiclarity:'"$tag"'/g' deployment/apiclarity.yaml
          git commit deployment/apiclarity.yaml -m "workflow: update tag in deployment yaml"

          sed -i 's/image: ghcr.io\/apiclarity\/kong-plugin:latest/image: ghcr.io\/apiclarity\/kong-plugin:'"$tag"'/g' plugins/gateway/kong/deploy/deploy.sh

          git tag --annotate --message "Tag for release $tag" "$tag"
          git push origin "refs/tags/$tag"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Get current timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push APIClarity
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ghcr.io/apiclarity/apiclarity:${{ github.event.inputs.version }}
          file: Dockerfile.kong
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VERSION=${{ github.event.inputs.version }}
            BUILD_TIMESTAMP=${{ steps.timestamp.outputs.timestamp }}
            COMMIT_HASH=${{ github.sha }}

      - name: Build and Push Kong plugin
        uses: docker/build-push-action@v2
        with:
          context: plugins
          tags: ghcr.io/apiclarity/kong-plugin:${{ github.event.inputs.version }}
          file: plugins/Dockerfile.kong
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: v0.178.0
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ github.event.inputs.version }}
          GORELEASER_PREVIOUS_TAG: ${{ github.event.inputs.pre_version }}