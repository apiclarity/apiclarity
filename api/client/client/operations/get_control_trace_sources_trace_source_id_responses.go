// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openclarity/apiclarity/api/client/models"
)

// GetControlTraceSourcesTraceSourceIDReader is a Reader for the GetControlTraceSourcesTraceSourceID structure.
type GetControlTraceSourcesTraceSourceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetControlTraceSourcesTraceSourceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetControlTraceSourcesTraceSourceIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetControlTraceSourcesTraceSourceIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetControlTraceSourcesTraceSourceIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetControlTraceSourcesTraceSourceIDOK creates a GetControlTraceSourcesTraceSourceIDOK with default headers values
func NewGetControlTraceSourcesTraceSourceIDOK() *GetControlTraceSourcesTraceSourceIDOK {
	return &GetControlTraceSourcesTraceSourceIDOK{}
}

/* GetControlTraceSourcesTraceSourceIDOK describes a response with status code 200, with default header values.

Trace Source information
*/
type GetControlTraceSourcesTraceSourceIDOK struct {
	Payload *models.TraceSource
}

func (o *GetControlTraceSourcesTraceSourceIDOK) Error() string {
	return fmt.Sprintf("[GET /control/traceSources/{traceSourceId}][%d] getControlTraceSourcesTraceSourceIdOK  %+v", 200, o.Payload)
}
func (o *GetControlTraceSourcesTraceSourceIDOK) GetPayload() *models.TraceSource {
	return o.Payload
}

func (o *GetControlTraceSourcesTraceSourceIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TraceSource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetControlTraceSourcesTraceSourceIDNotFound creates a GetControlTraceSourcesTraceSourceIDNotFound with default headers values
func NewGetControlTraceSourcesTraceSourceIDNotFound() *GetControlTraceSourcesTraceSourceIDNotFound {
	return &GetControlTraceSourcesTraceSourceIDNotFound{}
}

/* GetControlTraceSourcesTraceSourceIDNotFound describes a response with status code 404, with default header values.

Trace Source not found
*/
type GetControlTraceSourcesTraceSourceIDNotFound struct {
	Payload *models.APIResponse
}

func (o *GetControlTraceSourcesTraceSourceIDNotFound) Error() string {
	return fmt.Sprintf("[GET /control/traceSources/{traceSourceId}][%d] getControlTraceSourcesTraceSourceIdNotFound  %+v", 404, o.Payload)
}
func (o *GetControlTraceSourcesTraceSourceIDNotFound) GetPayload() *models.APIResponse {
	return o.Payload
}

func (o *GetControlTraceSourcesTraceSourceIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetControlTraceSourcesTraceSourceIDDefault creates a GetControlTraceSourcesTraceSourceIDDefault with default headers values
func NewGetControlTraceSourcesTraceSourceIDDefault(code int) *GetControlTraceSourcesTraceSourceIDDefault {
	return &GetControlTraceSourcesTraceSourceIDDefault{
		_statusCode: code,
	}
}

/* GetControlTraceSourcesTraceSourceIDDefault describes a response with status code -1, with default header values.

unknown error
*/
type GetControlTraceSourcesTraceSourceIDDefault struct {
	_statusCode int

	Payload *models.APIResponse
}

// Code gets the status code for the get control trace sources trace source ID default response
func (o *GetControlTraceSourcesTraceSourceIDDefault) Code() int {
	return o._statusCode
}

func (o *GetControlTraceSourcesTraceSourceIDDefault) Error() string {
	return fmt.Sprintf("[GET /control/traceSources/{traceSourceId}][%d] GetControlTraceSourcesTraceSourceID default  %+v", o._statusCode, o.Payload)
}
func (o *GetControlTraceSourcesTraceSourceIDDefault) GetPayload() *models.APIResponse {
	return o.Payload
}

func (o *GetControlTraceSourcesTraceSourceIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
