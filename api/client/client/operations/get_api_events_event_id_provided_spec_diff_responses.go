// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openclarity/apiclarity/api/client/models"
)

// GetAPIEventsEventIDProvidedSpecDiffReader is a Reader for the GetAPIEventsEventIDProvidedSpecDiff structure.
type GetAPIEventsEventIDProvidedSpecDiffReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIEventsEventIDProvidedSpecDiffReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIEventsEventIDProvidedSpecDiffOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetAPIEventsEventIDProvidedSpecDiffDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetAPIEventsEventIDProvidedSpecDiffOK creates a GetAPIEventsEventIDProvidedSpecDiffOK with default headers values
func NewGetAPIEventsEventIDProvidedSpecDiffOK() *GetAPIEventsEventIDProvidedSpecDiffOK {
	return &GetAPIEventsEventIDProvidedSpecDiffOK{}
}

/* GetAPIEventsEventIDProvidedSpecDiffOK describes a response with status code 200, with default header values.

Success
*/
type GetAPIEventsEventIDProvidedSpecDiffOK struct {
	Payload *models.APIEventSpecDiff
}

func (o *GetAPIEventsEventIDProvidedSpecDiffOK) Error() string {
	return fmt.Sprintf("[GET /apiEvents/{eventId}/providedSpecDiff][%d] getApiEventsEventIdProvidedSpecDiffOK  %+v", 200, o.Payload)
}
func (o *GetAPIEventsEventIDProvidedSpecDiffOK) GetPayload() *models.APIEventSpecDiff {
	return o.Payload
}

func (o *GetAPIEventsEventIDProvidedSpecDiffOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIEventSpecDiff)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIEventsEventIDProvidedSpecDiffDefault creates a GetAPIEventsEventIDProvidedSpecDiffDefault with default headers values
func NewGetAPIEventsEventIDProvidedSpecDiffDefault(code int) *GetAPIEventsEventIDProvidedSpecDiffDefault {
	return &GetAPIEventsEventIDProvidedSpecDiffDefault{
		_statusCode: code,
	}
}

/* GetAPIEventsEventIDProvidedSpecDiffDefault describes a response with status code -1, with default header values.

unknown error
*/
type GetAPIEventsEventIDProvidedSpecDiffDefault struct {
	_statusCode int

	Payload *models.APIResponse
}

// Code gets the status code for the get API events event ID provided spec diff default response
func (o *GetAPIEventsEventIDProvidedSpecDiffDefault) Code() int {
	return o._statusCode
}

func (o *GetAPIEventsEventIDProvidedSpecDiffDefault) Error() string {
	return fmt.Sprintf("[GET /apiEvents/{eventId}/providedSpecDiff][%d] GetAPIEventsEventIDProvidedSpecDiff default  %+v", o._statusCode, o.Payload)
}
func (o *GetAPIEventsEventIDProvidedSpecDiffDefault) GetPayload() *models.APIResponse {
	return o.Payload
}

func (o *GetAPIEventsEventIDProvidedSpecDiffDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
