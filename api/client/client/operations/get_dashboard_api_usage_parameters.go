// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetDashboardAPIUsageParams creates a new GetDashboardAPIUsageParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetDashboardAPIUsageParams() *GetDashboardAPIUsageParams {
	return &GetDashboardAPIUsageParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetDashboardAPIUsageParamsWithTimeout creates a new GetDashboardAPIUsageParams object
// with the ability to set a timeout on a request.
func NewGetDashboardAPIUsageParamsWithTimeout(timeout time.Duration) *GetDashboardAPIUsageParams {
	return &GetDashboardAPIUsageParams{
		timeout: timeout,
	}
}

// NewGetDashboardAPIUsageParamsWithContext creates a new GetDashboardAPIUsageParams object
// with the ability to set a context for a request.
func NewGetDashboardAPIUsageParamsWithContext(ctx context.Context) *GetDashboardAPIUsageParams {
	return &GetDashboardAPIUsageParams{
		Context: ctx,
	}
}

// NewGetDashboardAPIUsageParamsWithHTTPClient creates a new GetDashboardAPIUsageParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetDashboardAPIUsageParamsWithHTTPClient(client *http.Client) *GetDashboardAPIUsageParams {
	return &GetDashboardAPIUsageParams{
		HTTPClient: client,
	}
}

/* GetDashboardAPIUsageParams contains all the parameters to send to the API endpoint
   for the get dashboard API usage operation.

   Typically these are written to a http.Request.
*/
type GetDashboardAPIUsageParams struct {

	/* EndTime.

	   End time of the query

	   Format: date-time
	*/
	EndTime strfmt.DateTime

	/* StartTime.

	   Start time of the query

	   Format: date-time
	*/
	StartTime strfmt.DateTime

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get dashboard API usage params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDashboardAPIUsageParams) WithDefaults() *GetDashboardAPIUsageParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get dashboard API usage params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDashboardAPIUsageParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get dashboard API usage params
func (o *GetDashboardAPIUsageParams) WithTimeout(timeout time.Duration) *GetDashboardAPIUsageParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get dashboard API usage params
func (o *GetDashboardAPIUsageParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get dashboard API usage params
func (o *GetDashboardAPIUsageParams) WithContext(ctx context.Context) *GetDashboardAPIUsageParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get dashboard API usage params
func (o *GetDashboardAPIUsageParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get dashboard API usage params
func (o *GetDashboardAPIUsageParams) WithHTTPClient(client *http.Client) *GetDashboardAPIUsageParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get dashboard API usage params
func (o *GetDashboardAPIUsageParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndTime adds the endTime to the get dashboard API usage params
func (o *GetDashboardAPIUsageParams) WithEndTime(endTime strfmt.DateTime) *GetDashboardAPIUsageParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the get dashboard API usage params
func (o *GetDashboardAPIUsageParams) SetEndTime(endTime strfmt.DateTime) {
	o.EndTime = endTime
}

// WithStartTime adds the startTime to the get dashboard API usage params
func (o *GetDashboardAPIUsageParams) WithStartTime(startTime strfmt.DateTime) *GetDashboardAPIUsageParams {
	o.SetStartTime(startTime)
	return o
}

// SetStartTime adds the startTime to the get dashboard API usage params
func (o *GetDashboardAPIUsageParams) SetStartTime(startTime strfmt.DateTime) {
	o.StartTime = startTime
}

// WriteToRequest writes these params to a swagger request
func (o *GetDashboardAPIUsageParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param endTime
	qrEndTime := o.EndTime
	qEndTime := qrEndTime.String()
	if qEndTime != "" {

		if err := r.SetQueryParam("endTime", qEndTime); err != nil {
			return err
		}
	}

	// query param startTime
	qrStartTime := o.StartTime
	qStartTime := qrStartTime.String()
	if qStartTime != "" {

		if err := r.SetQueryParam("startTime", qStartTime); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
