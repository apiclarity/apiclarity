// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AlertSeverityEnum Level of alert
//
// swagger:model AlertSeverityEnum
type AlertSeverityEnum string

func NewAlertSeverityEnum(value AlertSeverityEnum) *AlertSeverityEnum {
	v := value
	return &v
}

const (

	// AlertSeverityEnumALERTINFO captures enum value "ALERT_INFO"
	AlertSeverityEnumALERTINFO AlertSeverityEnum = "ALERT_INFO"

	// AlertSeverityEnumALERTWARN captures enum value "ALERT_WARN"
	AlertSeverityEnumALERTWARN AlertSeverityEnum = "ALERT_WARN"

	// AlertSeverityEnumALERTCRITICAL captures enum value "ALERT_CRITICAL"
	AlertSeverityEnumALERTCRITICAL AlertSeverityEnum = "ALERT_CRITICAL"
)

// for schema
var alertSeverityEnumEnum []interface{}

func init() {
	var res []AlertSeverityEnum
	if err := json.Unmarshal([]byte(`["ALERT_INFO","ALERT_WARN","ALERT_CRITICAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertSeverityEnumEnum = append(alertSeverityEnumEnum, v)
	}
}

func (m AlertSeverityEnum) validateAlertSeverityEnumEnum(path, location string, value AlertSeverityEnum) error {
	if err := validate.EnumCase(path, location, value, alertSeverityEnumEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this alert severity enum
func (m AlertSeverityEnum) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAlertSeverityEnumEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this alert severity enum based on context it is used
func (m AlertSeverityEnum) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
