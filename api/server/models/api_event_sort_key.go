// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// APIEventSortKey Api event sort key
//
// swagger:model ApiEventSortKey
type APIEventSortKey string

func NewAPIEventSortKey(value APIEventSortKey) *APIEventSortKey {
	v := value
	return &v
}

const (

	// APIEventSortKeyTime captures enum value "time"
	APIEventSortKeyTime APIEventSortKey = "time"

	// APIEventSortKeyMethod captures enum value "method"
	APIEventSortKeyMethod APIEventSortKey = "method"

	// APIEventSortKeyPath captures enum value "path"
	APIEventSortKeyPath APIEventSortKey = "path"

	// APIEventSortKeyStatusCode captures enum value "statusCode"
	APIEventSortKeyStatusCode APIEventSortKey = "statusCode"

	// APIEventSortKeySourceIP captures enum value "sourceIP"
	APIEventSortKeySourceIP APIEventSortKey = "sourceIP"

	// APIEventSortKeyDestinationIP captures enum value "destinationIP"
	APIEventSortKeyDestinationIP APIEventSortKey = "destinationIP"

	// APIEventSortKeyDestinationPort captures enum value "destinationPort"
	APIEventSortKeyDestinationPort APIEventSortKey = "destinationPort"

	// APIEventSortKeySpecDiffType captures enum value "specDiffType"
	APIEventSortKeySpecDiffType APIEventSortKey = "specDiffType"

	// APIEventSortKeyHostSpecName captures enum value "hostSpecName"
	APIEventSortKeyHostSpecName APIEventSortKey = "hostSpecName"

	// APIEventSortKeyAPIType captures enum value "apiType"
	APIEventSortKeyAPIType APIEventSortKey = "apiType"
)

// for schema
var apiEventSortKeyEnum []interface{}

func init() {
	var res []APIEventSortKey
	if err := json.Unmarshal([]byte(`["time","method","path","statusCode","sourceIP","destinationIP","destinationPort","specDiffType","hostSpecName","apiType"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiEventSortKeyEnum = append(apiEventSortKeyEnum, v)
	}
}

func (m APIEventSortKey) validateAPIEventSortKeyEnum(path, location string, value APIEventSortKey) error {
	if err := validate.EnumCase(path, location, value, apiEventSortKeyEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this Api event sort key
func (m APIEventSortKey) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAPIEventSortKeyEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this Api event sort key based on context it is used
func (m APIEventSortKey) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
