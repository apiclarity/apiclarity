// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// APIClarityFeatureEnum APIClarity Feature Name
//
// swagger:model APIClarityFeatureEnum
type APIClarityFeatureEnum string

func NewAPIClarityFeatureEnum(value APIClarityFeatureEnum) *APIClarityFeatureEnum {
	v := value
	return &v
}

const (

	// APIClarityFeatureEnumSpecreconstructor captures enum value "specreconstructor"
	APIClarityFeatureEnumSpecreconstructor APIClarityFeatureEnum = "specreconstructor"

	// APIClarityFeatureEnumSpecdiffs captures enum value "specdiffs"
	APIClarityFeatureEnumSpecdiffs APIClarityFeatureEnum = "specdiffs"

	// APIClarityFeatureEnumTraceanalyzer captures enum value "traceanalyzer"
	APIClarityFeatureEnumTraceanalyzer APIClarityFeatureEnum = "traceanalyzer"

	// APIClarityFeatureEnumBfla captures enum value "bfla"
	APIClarityFeatureEnumBfla APIClarityFeatureEnum = "bfla"

	// APIClarityFeatureEnumSpecDiffer captures enum value "spec_differ"
	APIClarityFeatureEnumSpecDiffer APIClarityFeatureEnum = "spec_differ"

	// APIClarityFeatureEnumFuzzer captures enum value "fuzzer"
	APIClarityFeatureEnumFuzzer APIClarityFeatureEnum = "fuzzer"
)

// for schema
var apiClarityFeatureEnumEnum []interface{}

func init() {
	var res []APIClarityFeatureEnum
	if err := json.Unmarshal([]byte(`["specreconstructor","specdiffs","traceanalyzer","bfla","spec_differ","fuzzer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiClarityFeatureEnumEnum = append(apiClarityFeatureEnumEnum, v)
	}
}

func (m APIClarityFeatureEnum) validateAPIClarityFeatureEnumEnum(path, location string, value APIClarityFeatureEnum) error {
	if err := validate.EnumCase(path, location, value, apiClarityFeatureEnumEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this API clarity feature enum
func (m APIClarityFeatureEnum) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAPIClarityFeatureEnumEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this API clarity feature enum based on context it is used
func (m APIClarityFeatureEnum) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
