// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// APIClarityFeatureOperationEnum APIClarity Feature Operation Enum
//
// swagger:model APIClarityFeatureOperationEnum
type APIClarityFeatureOperationEnum string

func NewAPIClarityFeatureOperationEnum(value APIClarityFeatureOperationEnum) *APIClarityFeatureOperationEnum {
	v := value
	return &v
}

const (

	// APIClarityFeatureOperationEnumREMOVE captures enum value "REMOVE"
	APIClarityFeatureOperationEnumREMOVE APIClarityFeatureOperationEnum = "REMOVE"

	// APIClarityFeatureOperationEnumSET captures enum value "SET"
	APIClarityFeatureOperationEnumSET APIClarityFeatureOperationEnum = "SET"

	// APIClarityFeatureOperationEnumADD captures enum value "ADD"
	APIClarityFeatureOperationEnumADD APIClarityFeatureOperationEnum = "ADD"
)

// for schema
var apiClarityFeatureOperationEnumEnum []interface{}

func init() {
	var res []APIClarityFeatureOperationEnum
	if err := json.Unmarshal([]byte(`["REMOVE","SET","ADD"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiClarityFeatureOperationEnumEnum = append(apiClarityFeatureOperationEnumEnum, v)
	}
}

func (m APIClarityFeatureOperationEnum) validateAPIClarityFeatureOperationEnumEnum(path, location string, value APIClarityFeatureOperationEnum) error {
	if err := validate.EnumCase(path, location, value, apiClarityFeatureOperationEnumEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this API clarity feature operation enum
func (m APIClarityFeatureOperationEnum) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAPIClarityFeatureOperationEnumEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this API clarity feature operation enum based on context it is used
func (m APIClarityFeatureOperationEnum) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
