// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostControlGatewaysHandlerFunc turns a function with the right signature into a post control gateways handler
type PostControlGatewaysHandlerFunc func(PostControlGatewaysParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostControlGatewaysHandlerFunc) Handle(params PostControlGatewaysParams) middleware.Responder {
	return fn(params)
}

// PostControlGatewaysHandler interface for that can handle valid post control gateways params
type PostControlGatewaysHandler interface {
	Handle(PostControlGatewaysParams) middleware.Responder
}

// NewPostControlGateways creates a new http.Handler for the post control gateways operation
func NewPostControlGateways(ctx *middleware.Context, handler PostControlGatewaysHandler) *PostControlGateways {
	return &PostControlGateways{Context: ctx, Handler: handler}
}

/* PostControlGateways swagger:route POST /control/gateways postControlGateways

Create a new gateway

*/
type PostControlGateways struct {
	Context *middleware.Context
	Handler PostControlGatewaysHandler
}

func (o *PostControlGateways) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostControlGatewaysParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
