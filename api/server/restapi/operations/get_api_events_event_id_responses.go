// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openclarity/apiclarity/api/server/models"
)

// GetAPIEventsEventIDOKCode is the HTTP code returned for type GetAPIEventsEventIDOK
const GetAPIEventsEventIDOKCode int = 200

/*GetAPIEventsEventIDOK Success

swagger:response getApiEventsEventIdOK
*/
type GetAPIEventsEventIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.APIEvent `json:"body,omitempty"`
}

// NewGetAPIEventsEventIDOK creates GetAPIEventsEventIDOK with default headers values
func NewGetAPIEventsEventIDOK() *GetAPIEventsEventIDOK {

	return &GetAPIEventsEventIDOK{}
}

// WithPayload adds the payload to the get Api events event Id o k response
func (o *GetAPIEventsEventIDOK) WithPayload(payload *models.APIEvent) *GetAPIEventsEventIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Api events event Id o k response
func (o *GetAPIEventsEventIDOK) SetPayload(payload *models.APIEvent) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAPIEventsEventIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetAPIEventsEventIDDefault unknown error

swagger:response getApiEventsEventIdDefault
*/
type GetAPIEventsEventIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetAPIEventsEventIDDefault creates GetAPIEventsEventIDDefault with default headers values
func NewGetAPIEventsEventIDDefault(code int) *GetAPIEventsEventIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetAPIEventsEventIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get API events event ID default response
func (o *GetAPIEventsEventIDDefault) WithStatusCode(code int) *GetAPIEventsEventIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get API events event ID default response
func (o *GetAPIEventsEventIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get API events event ID default response
func (o *GetAPIEventsEventIDDefault) WithPayload(payload *models.APIResponse) *GetAPIEventsEventIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get API events event ID default response
func (o *GetAPIEventsEventIDDefault) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAPIEventsEventIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
