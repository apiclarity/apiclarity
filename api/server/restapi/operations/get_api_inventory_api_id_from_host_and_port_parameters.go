// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// NewGetAPIInventoryAPIIDFromHostAndPortParams creates a new GetAPIInventoryAPIIDFromHostAndPortParams object
//
// There are no default values defined in the spec.
func NewGetAPIInventoryAPIIDFromHostAndPortParams() GetAPIInventoryAPIIDFromHostAndPortParams {

	return GetAPIInventoryAPIIDFromHostAndPortParams{}
}

// GetAPIInventoryAPIIDFromHostAndPortParams contains all the bound params for the get API inventory API ID from host and port operation
// typically these are obtained from a http.Request
//
// swagger:parameters GetAPIInventoryAPIIDFromHostAndPort
type GetAPIInventoryAPIIDFromHostAndPortParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*api host name
	  Required: true
	  In: query
	*/
	Host string
	/*api port
	  Required: true
	  In: query
	*/
	Port string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewGetAPIInventoryAPIIDFromHostAndPortParams() beforehand.
func (o *GetAPIInventoryAPIIDFromHostAndPortParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qHost, qhkHost, _ := qs.GetOK("host")
	if err := o.bindHost(qHost, qhkHost, route.Formats); err != nil {
		res = append(res, err)
	}

	qPort, qhkPort, _ := qs.GetOK("port")
	if err := o.bindPort(qPort, qhkPort, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindHost binds and validates parameter Host from query.
func (o *GetAPIInventoryAPIIDFromHostAndPortParams) bindHost(rawData []string, hasKey bool, formats strfmt.Registry) error {
	if !hasKey {
		return errors.Required("host", "query", rawData)
	}
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// AllowEmptyValue: false

	if err := validate.RequiredString("host", "query", raw); err != nil {
		return err
	}
	o.Host = raw

	return nil
}

// bindPort binds and validates parameter Port from query.
func (o *GetAPIInventoryAPIIDFromHostAndPortParams) bindPort(rawData []string, hasKey bool, formats strfmt.Registry) error {
	if !hasKey {
		return errors.Required("port", "query", rawData)
	}
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// AllowEmptyValue: false

	if err := validate.RequiredString("port", "query", raw); err != nil {
		return err
	}
	o.Port = raw

	return nil
}
