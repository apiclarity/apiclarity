// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openclarity/apiclarity/api/server/models"
)

// DeleteControlTraceSourcesTraceSourceIDNoContentCode is the HTTP code returned for type DeleteControlTraceSourcesTraceSourceIDNoContent
const DeleteControlTraceSourcesTraceSourceIDNoContentCode int = 204

/*DeleteControlTraceSourcesTraceSourceIDNoContent Success

swagger:response deleteControlTraceSourcesTraceSourceIdNoContent
*/
type DeleteControlTraceSourcesTraceSourceIDNoContent struct {
}

// NewDeleteControlTraceSourcesTraceSourceIDNoContent creates DeleteControlTraceSourcesTraceSourceIDNoContent with default headers values
func NewDeleteControlTraceSourcesTraceSourceIDNoContent() *DeleteControlTraceSourcesTraceSourceIDNoContent {

	return &DeleteControlTraceSourcesTraceSourceIDNoContent{}
}

// WriteResponse to the client
func (o *DeleteControlTraceSourcesTraceSourceIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteControlTraceSourcesTraceSourceIDNotFoundCode is the HTTP code returned for type DeleteControlTraceSourcesTraceSourceIDNotFound
const DeleteControlTraceSourcesTraceSourceIDNotFoundCode int = 404

/*DeleteControlTraceSourcesTraceSourceIDNotFound Trace Source not found

swagger:response deleteControlTraceSourcesTraceSourceIdNotFound
*/
type DeleteControlTraceSourcesTraceSourceIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteControlTraceSourcesTraceSourceIDNotFound creates DeleteControlTraceSourcesTraceSourceIDNotFound with default headers values
func NewDeleteControlTraceSourcesTraceSourceIDNotFound() *DeleteControlTraceSourcesTraceSourceIDNotFound {

	return &DeleteControlTraceSourcesTraceSourceIDNotFound{}
}

// WithPayload adds the payload to the delete control trace sources trace source Id not found response
func (o *DeleteControlTraceSourcesTraceSourceIDNotFound) WithPayload(payload *models.APIResponse) *DeleteControlTraceSourcesTraceSourceIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete control trace sources trace source Id not found response
func (o *DeleteControlTraceSourcesTraceSourceIDNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteControlTraceSourcesTraceSourceIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteControlTraceSourcesTraceSourceIDDefault unknown error

swagger:response deleteControlTraceSourcesTraceSourceIdDefault
*/
type DeleteControlTraceSourcesTraceSourceIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteControlTraceSourcesTraceSourceIDDefault creates DeleteControlTraceSourcesTraceSourceIDDefault with default headers values
func NewDeleteControlTraceSourcesTraceSourceIDDefault(code int) *DeleteControlTraceSourcesTraceSourceIDDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteControlTraceSourcesTraceSourceIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete control trace sources trace source ID default response
func (o *DeleteControlTraceSourcesTraceSourceIDDefault) WithStatusCode(code int) *DeleteControlTraceSourcesTraceSourceIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete control trace sources trace source ID default response
func (o *DeleteControlTraceSourcesTraceSourceIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete control trace sources trace source ID default response
func (o *DeleteControlTraceSourcesTraceSourceIDDefault) WithPayload(payload *models.APIResponse) *DeleteControlTraceSourcesTraceSourceIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete control trace sources trace source ID default response
func (o *DeleteControlTraceSourcesTraceSourceIDDefault) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteControlTraceSourcesTraceSourceIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
