// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openclarity/apiclarity/api/server/models"
)

// GetDashboardAPIUsageOKCode is the HTTP code returned for type GetDashboardAPIUsageOK
const GetDashboardAPIUsageOKCode int = 200

/*GetDashboardAPIUsageOK Success

swagger:response getDashboardApiUsageOK
*/
type GetDashboardAPIUsageOK struct {

	/*
	  In: Body
	*/
	Payload *models.APIUsages `json:"body,omitempty"`
}

// NewGetDashboardAPIUsageOK creates GetDashboardAPIUsageOK with default headers values
func NewGetDashboardAPIUsageOK() *GetDashboardAPIUsageOK {

	return &GetDashboardAPIUsageOK{}
}

// WithPayload adds the payload to the get dashboard Api usage o k response
func (o *GetDashboardAPIUsageOK) WithPayload(payload *models.APIUsages) *GetDashboardAPIUsageOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get dashboard Api usage o k response
func (o *GetDashboardAPIUsageOK) SetPayload(payload *models.APIUsages) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDashboardAPIUsageOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetDashboardAPIUsageDefault unknown error

swagger:response getDashboardApiUsageDefault
*/
type GetDashboardAPIUsageDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetDashboardAPIUsageDefault creates GetDashboardAPIUsageDefault with default headers values
func NewGetDashboardAPIUsageDefault(code int) *GetDashboardAPIUsageDefault {
	if code <= 0 {
		code = 500
	}

	return &GetDashboardAPIUsageDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get dashboard API usage default response
func (o *GetDashboardAPIUsageDefault) WithStatusCode(code int) *GetDashboardAPIUsageDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get dashboard API usage default response
func (o *GetDashboardAPIUsageDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get dashboard API usage default response
func (o *GetDashboardAPIUsageDefault) WithPayload(payload *models.APIResponse) *GetDashboardAPIUsageDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get dashboard API usage default response
func (o *GetDashboardAPIUsageDefault) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDashboardAPIUsageDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
