// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteAPIInventoryAPIIDSpecsReconstructedSpecHandlerFunc turns a function with the right signature into a delete API inventory API ID specs reconstructed spec handler
type DeleteAPIInventoryAPIIDSpecsReconstructedSpecHandlerFunc func(DeleteAPIInventoryAPIIDSpecsReconstructedSpecParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteAPIInventoryAPIIDSpecsReconstructedSpecHandlerFunc) Handle(params DeleteAPIInventoryAPIIDSpecsReconstructedSpecParams) middleware.Responder {
	return fn(params)
}

// DeleteAPIInventoryAPIIDSpecsReconstructedSpecHandler interface for that can handle valid delete API inventory API ID specs reconstructed spec params
type DeleteAPIInventoryAPIIDSpecsReconstructedSpecHandler interface {
	Handle(DeleteAPIInventoryAPIIDSpecsReconstructedSpecParams) middleware.Responder
}

// NewDeleteAPIInventoryAPIIDSpecsReconstructedSpec creates a new http.Handler for the delete API inventory API ID specs reconstructed spec operation
func NewDeleteAPIInventoryAPIIDSpecsReconstructedSpec(ctx *middleware.Context, handler DeleteAPIInventoryAPIIDSpecsReconstructedSpecHandler) *DeleteAPIInventoryAPIIDSpecsReconstructedSpec {
	return &DeleteAPIInventoryAPIIDSpecsReconstructedSpec{Context: ctx, Handler: handler}
}

/* DeleteAPIInventoryAPIIDSpecsReconstructedSpec swagger:route DELETE /apiInventory/{apiId}/specs/reconstructedSpec deleteApiInventoryApiIdSpecsReconstructedSpec

Unset a reconstructed spec for a specific API

*/
type DeleteAPIInventoryAPIIDSpecsReconstructedSpec struct {
	Context *middleware.Context
	Handler DeleteAPIInventoryAPIIDSpecsReconstructedSpecHandler
}

func (o *DeleteAPIInventoryAPIIDSpecsReconstructedSpec) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteAPIInventoryAPIIDSpecsReconstructedSpecParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
