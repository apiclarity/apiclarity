// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openclarity/apiclarity/api/server/models"
)

// GetDashboardAPIUsageLatestDiffsOKCode is the HTTP code returned for type GetDashboardAPIUsageLatestDiffsOK
const GetDashboardAPIUsageLatestDiffsOKCode int = 200

/*GetDashboardAPIUsageLatestDiffsOK Success

swagger:response getDashboardApiUsageLatestDiffsOK
*/
type GetDashboardAPIUsageLatestDiffsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.SpecDiffTime `json:"body,omitempty"`
}

// NewGetDashboardAPIUsageLatestDiffsOK creates GetDashboardAPIUsageLatestDiffsOK with default headers values
func NewGetDashboardAPIUsageLatestDiffsOK() *GetDashboardAPIUsageLatestDiffsOK {

	return &GetDashboardAPIUsageLatestDiffsOK{}
}

// WithPayload adds the payload to the get dashboard Api usage latest diffs o k response
func (o *GetDashboardAPIUsageLatestDiffsOK) WithPayload(payload []*models.SpecDiffTime) *GetDashboardAPIUsageLatestDiffsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get dashboard Api usage latest diffs o k response
func (o *GetDashboardAPIUsageLatestDiffsOK) SetPayload(payload []*models.SpecDiffTime) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDashboardAPIUsageLatestDiffsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.SpecDiffTime, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetDashboardAPIUsageLatestDiffsDefault unknown error

swagger:response getDashboardApiUsageLatestDiffsDefault
*/
type GetDashboardAPIUsageLatestDiffsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetDashboardAPIUsageLatestDiffsDefault creates GetDashboardAPIUsageLatestDiffsDefault with default headers values
func NewGetDashboardAPIUsageLatestDiffsDefault(code int) *GetDashboardAPIUsageLatestDiffsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetDashboardAPIUsageLatestDiffsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get dashboard API usage latest diffs default response
func (o *GetDashboardAPIUsageLatestDiffsDefault) WithStatusCode(code int) *GetDashboardAPIUsageLatestDiffsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get dashboard API usage latest diffs default response
func (o *GetDashboardAPIUsageLatestDiffsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get dashboard API usage latest diffs default response
func (o *GetDashboardAPIUsageLatestDiffsDefault) WithPayload(payload *models.APIResponse) *GetDashboardAPIUsageLatestDiffsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get dashboard API usage latest diffs default response
func (o *GetDashboardAPIUsageLatestDiffsDefault) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDashboardAPIUsageLatestDiffsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
