// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openclarity/apiclarity/api/server/models"
)

// PutAPIInventoryAPIIDSpecsProvidedSpecCreatedCode is the HTTP code returned for type PutAPIInventoryAPIIDSpecsProvidedSpecCreated
const PutAPIInventoryAPIIDSpecsProvidedSpecCreatedCode int = 201

/*PutAPIInventoryAPIIDSpecsProvidedSpecCreated Success

swagger:response putApiInventoryApiIdSpecsProvidedSpecCreated
*/
type PutAPIInventoryAPIIDSpecsProvidedSpecCreated struct {

	/*
	  In: Body
	*/
	Payload *models.RawSpec `json:"body,omitempty"`
}

// NewPutAPIInventoryAPIIDSpecsProvidedSpecCreated creates PutAPIInventoryAPIIDSpecsProvidedSpecCreated with default headers values
func NewPutAPIInventoryAPIIDSpecsProvidedSpecCreated() *PutAPIInventoryAPIIDSpecsProvidedSpecCreated {

	return &PutAPIInventoryAPIIDSpecsProvidedSpecCreated{}
}

// WithPayload adds the payload to the put Api inventory Api Id specs provided spec created response
func (o *PutAPIInventoryAPIIDSpecsProvidedSpecCreated) WithPayload(payload *models.RawSpec) *PutAPIInventoryAPIIDSpecsProvidedSpecCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put Api inventory Api Id specs provided spec created response
func (o *PutAPIInventoryAPIIDSpecsProvidedSpecCreated) SetPayload(payload *models.RawSpec) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutAPIInventoryAPIIDSpecsProvidedSpecCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutAPIInventoryAPIIDSpecsProvidedSpecBadRequestCode is the HTTP code returned for type PutAPIInventoryAPIIDSpecsProvidedSpecBadRequest
const PutAPIInventoryAPIIDSpecsProvidedSpecBadRequestCode int = 400

/*PutAPIInventoryAPIIDSpecsProvidedSpecBadRequest Spec validation failure

swagger:response putApiInventoryApiIdSpecsProvidedSpecBadRequest
*/
type PutAPIInventoryAPIIDSpecsProvidedSpecBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewPutAPIInventoryAPIIDSpecsProvidedSpecBadRequest creates PutAPIInventoryAPIIDSpecsProvidedSpecBadRequest with default headers values
func NewPutAPIInventoryAPIIDSpecsProvidedSpecBadRequest() *PutAPIInventoryAPIIDSpecsProvidedSpecBadRequest {

	return &PutAPIInventoryAPIIDSpecsProvidedSpecBadRequest{}
}

// WithPayload adds the payload to the put Api inventory Api Id specs provided spec bad request response
func (o *PutAPIInventoryAPIIDSpecsProvidedSpecBadRequest) WithPayload(payload string) *PutAPIInventoryAPIIDSpecsProvidedSpecBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put Api inventory Api Id specs provided spec bad request response
func (o *PutAPIInventoryAPIIDSpecsProvidedSpecBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutAPIInventoryAPIIDSpecsProvidedSpecBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*PutAPIInventoryAPIIDSpecsProvidedSpecDefault unknown error

swagger:response putApiInventoryApiIdSpecsProvidedSpecDefault
*/
type PutAPIInventoryAPIIDSpecsProvidedSpecDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewPutAPIInventoryAPIIDSpecsProvidedSpecDefault creates PutAPIInventoryAPIIDSpecsProvidedSpecDefault with default headers values
func NewPutAPIInventoryAPIIDSpecsProvidedSpecDefault(code int) *PutAPIInventoryAPIIDSpecsProvidedSpecDefault {
	if code <= 0 {
		code = 500
	}

	return &PutAPIInventoryAPIIDSpecsProvidedSpecDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put API inventory API ID specs provided spec default response
func (o *PutAPIInventoryAPIIDSpecsProvidedSpecDefault) WithStatusCode(code int) *PutAPIInventoryAPIIDSpecsProvidedSpecDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put API inventory API ID specs provided spec default response
func (o *PutAPIInventoryAPIIDSpecsProvidedSpecDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put API inventory API ID specs provided spec default response
func (o *PutAPIInventoryAPIIDSpecsProvidedSpecDefault) WithPayload(payload *models.APIResponse) *PutAPIInventoryAPIIDSpecsProvidedSpecDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put API inventory API ID specs provided spec default response
func (o *PutAPIInventoryAPIIDSpecsProvidedSpecDefault) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutAPIInventoryAPIIDSpecsProvidedSpecDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
