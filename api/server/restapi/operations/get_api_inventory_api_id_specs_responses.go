// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openclarity/apiclarity/api/server/models"
)

// GetAPIInventoryAPIIDSpecsOKCode is the HTTP code returned for type GetAPIInventoryAPIIDSpecsOK
const GetAPIInventoryAPIIDSpecsOKCode int = 200

/*GetAPIInventoryAPIIDSpecsOK Success

swagger:response getApiInventoryApiIdSpecsOK
*/
type GetAPIInventoryAPIIDSpecsOK struct {

	/*
	  In: Body
	*/
	Payload *models.OpenAPISpecs `json:"body,omitempty"`
}

// NewGetAPIInventoryAPIIDSpecsOK creates GetAPIInventoryAPIIDSpecsOK with default headers values
func NewGetAPIInventoryAPIIDSpecsOK() *GetAPIInventoryAPIIDSpecsOK {

	return &GetAPIInventoryAPIIDSpecsOK{}
}

// WithPayload adds the payload to the get Api inventory Api Id specs o k response
func (o *GetAPIInventoryAPIIDSpecsOK) WithPayload(payload *models.OpenAPISpecs) *GetAPIInventoryAPIIDSpecsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Api inventory Api Id specs o k response
func (o *GetAPIInventoryAPIIDSpecsOK) SetPayload(payload *models.OpenAPISpecs) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAPIInventoryAPIIDSpecsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetAPIInventoryAPIIDSpecsDefault unknown error

swagger:response getApiInventoryApiIdSpecsDefault
*/
type GetAPIInventoryAPIIDSpecsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetAPIInventoryAPIIDSpecsDefault creates GetAPIInventoryAPIIDSpecsDefault with default headers values
func NewGetAPIInventoryAPIIDSpecsDefault(code int) *GetAPIInventoryAPIIDSpecsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetAPIInventoryAPIIDSpecsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get API inventory API ID specs default response
func (o *GetAPIInventoryAPIIDSpecsDefault) WithStatusCode(code int) *GetAPIInventoryAPIIDSpecsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get API inventory API ID specs default response
func (o *GetAPIInventoryAPIIDSpecsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get API inventory API ID specs default response
func (o *GetAPIInventoryAPIIDSpecsDefault) WithPayload(payload *models.APIResponse) *GetAPIInventoryAPIIDSpecsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get API inventory API ID specs default response
func (o *GetAPIInventoryAPIIDSpecsDefault) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAPIInventoryAPIIDSpecsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
