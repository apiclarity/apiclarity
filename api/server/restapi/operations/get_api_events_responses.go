// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openclarity/apiclarity/api/server/models"
)

// GetAPIEventsOKCode is the HTTP code returned for type GetAPIEventsOK
const GetAPIEventsOKCode int = 200

/*GetAPIEventsOK Success

swagger:response getApiEventsOK
*/
type GetAPIEventsOK struct {

	/*
	  In: Body
	*/
	Payload *GetAPIEventsOKBody `json:"body,omitempty"`
}

// NewGetAPIEventsOK creates GetAPIEventsOK with default headers values
func NewGetAPIEventsOK() *GetAPIEventsOK {

	return &GetAPIEventsOK{}
}

// WithPayload adds the payload to the get Api events o k response
func (o *GetAPIEventsOK) WithPayload(payload *GetAPIEventsOKBody) *GetAPIEventsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Api events o k response
func (o *GetAPIEventsOK) SetPayload(payload *GetAPIEventsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAPIEventsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetAPIEventsDefault unknown error

swagger:response getApiEventsDefault
*/
type GetAPIEventsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetAPIEventsDefault creates GetAPIEventsDefault with default headers values
func NewGetAPIEventsDefault(code int) *GetAPIEventsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetAPIEventsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get API events default response
func (o *GetAPIEventsDefault) WithStatusCode(code int) *GetAPIEventsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get API events default response
func (o *GetAPIEventsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get API events default response
func (o *GetAPIEventsDefault) WithPayload(payload *models.APIResponse) *GetAPIEventsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get API events default response
func (o *GetAPIEventsDefault) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAPIEventsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
