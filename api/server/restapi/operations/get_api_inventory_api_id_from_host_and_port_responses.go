// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openclarity/apiclarity/api/server/models"
)

// GetAPIInventoryAPIIDFromHostAndPortOKCode is the HTTP code returned for type GetAPIInventoryAPIIDFromHostAndPortOK
const GetAPIInventoryAPIIDFromHostAndPortOKCode int = 200

/*GetAPIInventoryAPIIDFromHostAndPortOK Success

swagger:response getApiInventoryApiIdFromHostAndPortOK
*/
type GetAPIInventoryAPIIDFromHostAndPortOK struct {

	/*api id
	  In: Body
	*/
	Payload uint32 `json:"body,omitempty"`
}

// NewGetAPIInventoryAPIIDFromHostAndPortOK creates GetAPIInventoryAPIIDFromHostAndPortOK with default headers values
func NewGetAPIInventoryAPIIDFromHostAndPortOK() *GetAPIInventoryAPIIDFromHostAndPortOK {

	return &GetAPIInventoryAPIIDFromHostAndPortOK{}
}

// WithPayload adds the payload to the get Api inventory Api Id from host and port o k response
func (o *GetAPIInventoryAPIIDFromHostAndPortOK) WithPayload(payload uint32) *GetAPIInventoryAPIIDFromHostAndPortOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Api inventory Api Id from host and port o k response
func (o *GetAPIInventoryAPIIDFromHostAndPortOK) SetPayload(payload uint32) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAPIInventoryAPIIDFromHostAndPortOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAPIInventoryAPIIDFromHostAndPortNotFoundCode is the HTTP code returned for type GetAPIInventoryAPIIDFromHostAndPortNotFound
const GetAPIInventoryAPIIDFromHostAndPortNotFoundCode int = 404

/*GetAPIInventoryAPIIDFromHostAndPortNotFound API ID Not Found

swagger:response getApiInventoryApiIdFromHostAndPortNotFound
*/
type GetAPIInventoryAPIIDFromHostAndPortNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetAPIInventoryAPIIDFromHostAndPortNotFound creates GetAPIInventoryAPIIDFromHostAndPortNotFound with default headers values
func NewGetAPIInventoryAPIIDFromHostAndPortNotFound() *GetAPIInventoryAPIIDFromHostAndPortNotFound {

	return &GetAPIInventoryAPIIDFromHostAndPortNotFound{}
}

// WithPayload adds the payload to the get Api inventory Api Id from host and port not found response
func (o *GetAPIInventoryAPIIDFromHostAndPortNotFound) WithPayload(payload *models.APIResponse) *GetAPIInventoryAPIIDFromHostAndPortNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Api inventory Api Id from host and port not found response
func (o *GetAPIInventoryAPIIDFromHostAndPortNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAPIInventoryAPIIDFromHostAndPortNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetAPIInventoryAPIIDFromHostAndPortDefault unknown error

swagger:response getApiInventoryApiIdFromHostAndPortDefault
*/
type GetAPIInventoryAPIIDFromHostAndPortDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewGetAPIInventoryAPIIDFromHostAndPortDefault creates GetAPIInventoryAPIIDFromHostAndPortDefault with default headers values
func NewGetAPIInventoryAPIIDFromHostAndPortDefault(code int) *GetAPIInventoryAPIIDFromHostAndPortDefault {
	if code <= 0 {
		code = 500
	}

	return &GetAPIInventoryAPIIDFromHostAndPortDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get API inventory API ID from host and port default response
func (o *GetAPIInventoryAPIIDFromHostAndPortDefault) WithStatusCode(code int) *GetAPIInventoryAPIIDFromHostAndPortDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get API inventory API ID from host and port default response
func (o *GetAPIInventoryAPIIDFromHostAndPortDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get API inventory API ID from host and port default response
func (o *GetAPIInventoryAPIIDFromHostAndPortDefault) WithPayload(payload *models.APIResponse) *GetAPIInventoryAPIIDFromHostAndPortDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get API inventory API ID from host and port default response
func (o *GetAPIInventoryAPIIDFromHostAndPortDefault) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAPIInventoryAPIIDFromHostAndPortDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
